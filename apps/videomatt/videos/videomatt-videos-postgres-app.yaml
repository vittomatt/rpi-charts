apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: videomatt-videos-postgres
  namespace: argocd
spec:
  project: default

  source:
    repoURL: https://charts.bitnami.com/bitnami
    chart: postgresql
    targetRevision: 13.2.30
    helm:
      releaseName: videomatt-videos-postgres
      values: |-
        image:
          repository: bitnami/postgresql
          tag: 17.5.0-debian-12-r7

        architecture: replication

        auth:
          existingSecret: videomatt-videos-secret

          database: placeholder
          username: placeholder
          replicationUsername: videomattrep

          secretKeys:
            adminPasswordKey: VIDEOS_POSTGRES_DB_PASSWORD
            userPasswordKey: VIDEOS_POSTGRES_DB_PASSWORD
            replicationPasswordKey: VIDEOS_POSTGRES_DB_REPLICA_PASSWORD
          
          usePasswordFiles: false

        primary:
          extraEnvVars:
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: videomatt-videos-secret
                  key: VIDEOS_POSTGRES_DB_NAME
            - name: POSTGRESQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: videomatt-videos-secret
                  key: VIDEOS_POSTGRES_DB_USER
          persistence:
            enabled: true
          persistentVolumeClaimRetentionPolicy:
            whenDeleted: Delete
            whenScaled: Retain

        readReplicas:
          extraEnvVars:
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: videomatt-videos-secret
                  key: VIDEOS_POSTGRES_DB_NAME
            - name: POSTGRESQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: videomatt-videos-secret
                  key: VIDEOS_POSTGRES_DB_USER
          replicaCount: 1
          persistence:
            enabled: true
          persistentVolumeClaimRetentionPolicy:
            whenDeleted: Delete
            whenScaled: Delete

        volumePermissions:
          enabled: true

  destination:
    server: https://kubernetes.default.svc
    namespace: vittospace

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
